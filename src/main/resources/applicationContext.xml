<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:contex="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://activemq.apache.org/schema/core  http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!-- Load Database Config -->
    <contex:property-placeholder location="classpath:config.properties"/>

    <!-- Auto Scanner -->
    <contex:component-scan base-package="com.wangdian.manage.service"/>

    <!-- MQ Setting -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory" scope="prototype">
        <amq:connectionFactory id="amqConnectionFactory" brokerURL="${mq.url}" userName="${mq.user}" password="${mq.pass}"/>
        <property name="sessionCacheSize" value="100"/>
    </bean>

    <jms:listener-container
            destination-type="queue"
            container-type="default"
            connection-factory="connectionFactory"
            acknowledge="auto">
        <jms:listener destination="Forever-Test-Queue" ref="consumerService" method="onMessage"/>
    </jms:listener-container>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" scope="prototype">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="defaultDestination" value="${mq.queues.log}"/>
        <property name="pubSubDomain" value="false"/>
    </bean>

    <bean id="mqInfo" class="com.wangdian.manage.entity.ActiveMQInfo">
        <property name="mqLogQueue" value="${mq.queues.log}"/>
        <property name="mqEmailQueue" value="${mq.queues.email}"/>
        <property name="mqQqQueue" value="${mq.queues.qq}"/>
        <property name="logBase" value="${log.base}"/>
        <property name="noticeQq" value="${notice.qq}"/>
        <property name="noticeEmail" value="${notice.email}"/>
    </bean>
</beans>